{"ast":null,"code":"var _jsxFileName = \"C:\\\\bsproject_side\\\\nanum_bundle\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GroupGrid from './GroupGrid';\nimport TargetList from './TargetList';\nimport GroupModal from './GroupModal';\nimport ConfirmModal from './ConfirmModal';\nimport { businessAPI, targetAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  min-height: 100vh;\n  background-color: #f8fafc;\n`;\n_c = DashboardContainer;\nconst Header = styled.header`\n  background: white;\n  border-bottom: 1px solid #e5e7eb;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n`;\n_c2 = Header;\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #1e293b;\n`;\n_c3 = Logo;\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n_c4 = UserInfo;\nconst BusinessName = styled.span`\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #374151;\n`;\n_c5 = BusinessName;\nconst LogoutButton = styled.button`\n  padding: 0.5rem 1rem;\n  background-color: #ef4444;\n  color: white;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: #dc2626;\n  }\n`;\n_c6 = LogoutButton;\nconst MainContent = styled.div`\n  display: flex;\n  min-height: calc(100vh - 80px);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c7 = MainContent;\nconst LeftPanel = styled.div`\n  flex: ${props => props.isSplit ? '1' : '1'};\n  padding: 2rem;\n  transition: flex 0.3s ease;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n    flex: none;\n  }\n`;\n_c8 = LeftPanel;\nconst AddGroupButton = styled.button`\n  margin-bottom: 1.5rem;\n  padding: 0.75rem 1.5rem;\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n`;\n_c9 = AddGroupButton;\nconst RightPanel = styled.div`\n  flex: ${props => props.isSplit ? '1' : '0'};\n  background: white;\n  border-left: 1px solid #e5e7eb;\n  transition: flex 0.3s ease;\n  overflow: hidden;\n  min-width: ${props => props.isSplit ? '400px' : '0'};\n\n  @media (max-width: 768px) {\n    border-left: none;\n    border-top: 1px solid #e5e7eb;\n    min-width: auto;\n    flex: none;\n    max-height: 50vh;\n  }\n`;\n_c0 = RightPanel;\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isSplit, setIsSplit] = useState(false);\n  const [targets, setTargets] = useState([]);\n  const [isGroupModalOpen, setIsGroupModalOpen] = useState(false);\n  const [editingGroup, setEditingGroup] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [groupToDelete, setGroupToDelete] = useState(null);\n  useEffect(() => {\n    // Lambda API에서 사업 목록 로드\n    const loadBusinesses = async () => {\n      try {\n        const response = await businessAPI.getBusinesses();\n        if (response.ok && response.data) {\n          setGroups(response.data);\n        }\n      } catch (error) {\n        console.error('사업 목록 로드 실패:', error);\n        // 오류 시 빈 배열로 설정\n        setGroups([]);\n      }\n    };\n    loadBusinesses();\n  }, []);\n  const handleGroupSelect = group => {\n    setSelectedGroup(group);\n    setIsSplit(true);\n\n    // 임시 대상자 데이터 로드\n    const mockTargets = [{\n      id: 1,\n      name: '김철수',\n      targetType: '수급자',\n      targetHousehold: '독거어르신',\n      address: '06292 서울특별시 강남구 테헤란로 123',\n      detailAddress: '101동 1001호',\n      mobilePhone: '010-1234-5678',\n      homePhone: '02-1234-5678',\n      applicationReason: '독거어르신으로 혼자 거주하며, 경제적 어려움으로 인해 지원이 필요합니다.',\n      directions: '지하철 2호선 강남역 3번 출구에서 도보 5분',\n      status: 'active',\n      registeredAt: '2024-01-15'\n    }, {\n      id: 2,\n      name: '이영희',\n      targetType: '차상위',\n      targetHousehold: '조손가구',\n      address: '06293 서울특별시 강남구 역삼동 456',\n      detailAddress: '202동 2002호',\n      mobilePhone: '010-2345-6789',\n      homePhone: '02-2345-6789',\n      applicationReason: '조손가구로 손자와 함께 거주하며, 할머니의 건강상 문제로 지원이 필요합니다.',\n      directions: '지하철 9호선 신논현역 1번 출구에서 도보 3분',\n      status: 'active',\n      registeredAt: '2024-01-16'\n    }, {\n      id: 3,\n      name: '박민수',\n      targetType: '일반저소득',\n      targetHousehold: '저소득1인가구',\n      address: '06294 서울특별시 강남구 논현동 789',\n      detailAddress: '303동 3003호',\n      mobilePhone: '010-3456-7890',\n      homePhone: '02-3456-7890',\n      applicationReason: '저소득 1인 가구로 경제적 어려움을 겪고 있어 지원이 필요합니다.',\n      directions: '지하철 7호선 논현역 2번 출구에서 도보 7분',\n      status: 'active',\n      registeredAt: '2024-01-17'\n    }];\n    setTargets(mockTargets);\n  };\n  const handleCloseSplit = () => {\n    setIsSplit(false);\n    setSelectedGroup(null);\n    setTargets([]);\n  };\n  const handleTargetUpdate = updatedTargets => {\n    setTargets(updatedTargets);\n  };\n  const handleAddGroup = () => {\n    setEditingGroup(null);\n    setIsGroupModalOpen(true);\n  };\n  const handleEditGroup = group => {\n    setEditingGroup(group);\n    setIsGroupModalOpen(true);\n  };\n  const handleDeleteGroup = group => {\n    setGroupToDelete(group);\n    setIsDeleteModalOpen(true);\n  };\n  const handleSaveGroup = groupData => {\n    let updatedGroups;\n    if (editingGroup) {\n      // 수정\n      updatedGroups = groups.map(group => group.id === editingGroup.id ? {\n        ...group,\n        ...groupData\n      } : group);\n    } else {\n      // 추가\n      const newGroup = {\n        id: Date.now(),\n        ...groupData,\n        targetCount: 0,\n        createdAt: new Date().toISOString().split('T')[0]\n      };\n      updatedGroups = [...groups, newGroup];\n    }\n    setGroups(updatedGroups);\n    localStorage.setItem('nanumGroups', JSON.stringify(updatedGroups));\n    setIsGroupModalOpen(false);\n    setEditingGroup(null);\n  };\n  const handleConfirmDeleteGroup = () => {\n    const updatedGroups = groups.filter(group => group.id !== groupToDelete.id);\n    setGroups(updatedGroups);\n    localStorage.setItem('nanumGroups', JSON.stringify(updatedGroups));\n    setIsDeleteModalOpen(false);\n    setGroupToDelete(null);\n\n    // 선택된 그룹이 삭제된 경우 선택 해제\n    if (selectedGroup && selectedGroup.id === groupToDelete.id) {\n      setSelectedGroup(null);\n      setIsSplit(false);\n      setTargets([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        children: \"\\uB098\\uB214\\uBC88\\uB4E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: [/*#__PURE__*/_jsxDEV(BusinessName, {\n          children: user.businessName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: onLogout,\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        isSplit: isSplit,\n        children: [/*#__PURE__*/_jsxDEV(AddGroupButton, {\n          onClick: handleAddGroup,\n          children: \"+ \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GroupGrid, {\n          groups: groups,\n          onGroupSelect: handleGroupSelect,\n          selectedGroup: selectedGroup,\n          onEditGroup: handleEditGroup,\n          onDeleteGroup: handleDeleteGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPanel, {\n        isSplit: isSplit,\n        children: isSplit && selectedGroup && /*#__PURE__*/_jsxDEV(TargetList, {\n          group: selectedGroup,\n          targets: targets,\n          onClose: handleCloseSplit,\n          onTargetUpdate: handleTargetUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), isGroupModalOpen && /*#__PURE__*/_jsxDEV(GroupModal, {\n      group: editingGroup,\n      onSave: handleSaveGroup,\n      onClose: () => {\n        setIsGroupModalOpen(false);\n        setEditingGroup(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      title: \"\\uADF8\\uB8F9 \\uC0AD\\uC81C\",\n      message: `${groupToDelete === null || groupToDelete === void 0 ? void 0 : groupToDelete.name} 그룹을 삭제하시겠습니까?`,\n      onConfirm: handleConfirmDeleteGroup,\n      onCancel: () => {\n        setIsDeleteModalOpen(false);\n        setGroupToDelete(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"K5OyS/orL/sjnSxkVmhtyvMb5XY=\");\n_c1 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"UserInfo\");\n$RefreshReg$(_c5, \"BusinessName\");\n$RefreshReg$(_c6, \"LogoutButton\");\n$RefreshReg$(_c7, \"MainContent\");\n$RefreshReg$(_c8, \"LeftPanel\");\n$RefreshReg$(_c9, \"AddGroupButton\");\n$RefreshReg$(_c0, \"RightPanel\");\n$RefreshReg$(_c1, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","GroupGrid","TargetList","GroupModal","ConfirmModal","businessAPI","targetAPI","jsxDEV","_jsxDEV","DashboardContainer","div","_c","Header","header","_c2","Logo","_c3","UserInfo","_c4","BusinessName","span","_c5","LogoutButton","button","_c6","MainContent","_c7","LeftPanel","props","isSplit","_c8","AddGroupButton","_c9","RightPanel","_c0","Dashboard","user","onLogout","_s","groups","setGroups","selectedGroup","setSelectedGroup","setIsSplit","targets","setTargets","isGroupModalOpen","setIsGroupModalOpen","editingGroup","setEditingGroup","isDeleteModalOpen","setIsDeleteModalOpen","groupToDelete","setGroupToDelete","loadBusinesses","response","getBusinesses","ok","data","error","console","handleGroupSelect","group","mockTargets","id","name","targetType","targetHousehold","address","detailAddress","mobilePhone","homePhone","applicationReason","directions","status","registeredAt","handleCloseSplit","handleTargetUpdate","updatedTargets","handleAddGroup","handleEditGroup","handleDeleteGroup","handleSaveGroup","groupData","updatedGroups","map","newGroup","Date","now","targetCount","createdAt","toISOString","split","localStorage","setItem","JSON","stringify","handleConfirmDeleteGroup","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","businessName","onClick","onGroupSelect","onEditGroup","onDeleteGroup","onClose","onTargetUpdate","onSave","title","message","onConfirm","onCancel","_c1","$RefreshReg$"],"sources":["C:/bsproject_side/nanum_bundle/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GroupGrid from './GroupGrid';\nimport TargetList from './TargetList';\nimport GroupModal from './GroupModal';\nimport ConfirmModal from './ConfirmModal';\nimport { businessAPI, targetAPI } from '../services/api';\n\nconst DashboardContainer = styled.div`\n  min-height: 100vh;\n  background-color: #f8fafc;\n`;\n\nconst Header = styled.header`\n  background: white;\n  border-bottom: 1px solid #e5e7eb;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n`;\n\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #1e293b;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst BusinessName = styled.span`\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #374151;\n`;\n\nconst LogoutButton = styled.button`\n  padding: 0.5rem 1rem;\n  background-color: #ef4444;\n  color: white;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: #dc2626;\n  }\n`;\n\nconst MainContent = styled.div`\n  display: flex;\n  min-height: calc(100vh - 80px);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst LeftPanel = styled.div`\n  flex: ${props => props.isSplit ? '1' : '1'};\n  padding: 2rem;\n  transition: flex 0.3s ease;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n    flex: none;\n  }\n`;\n\nconst AddGroupButton = styled.button`\n  margin-bottom: 1.5rem;\n  padding: 0.75rem 1.5rem;\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n`;\n\nconst RightPanel = styled.div`\n  flex: ${props => props.isSplit ? '1' : '0'};\n  background: white;\n  border-left: 1px solid #e5e7eb;\n  transition: flex 0.3s ease;\n  overflow: hidden;\n  min-width: ${props => props.isSplit ? '400px' : '0'};\n\n  @media (max-width: 768px) {\n    border-left: none;\n    border-top: 1px solid #e5e7eb;\n    min-width: auto;\n    flex: none;\n    max-height: 50vh;\n  }\n`;\n\nconst Dashboard = ({ user, onLogout }) => {\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isSplit, setIsSplit] = useState(false);\n  const [targets, setTargets] = useState([]);\n  const [isGroupModalOpen, setIsGroupModalOpen] = useState(false);\n  const [editingGroup, setEditingGroup] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [groupToDelete, setGroupToDelete] = useState(null);\n\n  useEffect(() => {\n    // Lambda API에서 사업 목록 로드\n    const loadBusinesses = async () => {\n      try {\n        const response = await businessAPI.getBusinesses();\n        if (response.ok && response.data) {\n          setGroups(response.data);\n        }\n      } catch (error) {\n        console.error('사업 목록 로드 실패:', error);\n        // 오류 시 빈 배열로 설정\n        setGroups([]);\n      }\n    };\n\n    loadBusinesses();\n  }, []);\n\n  const handleGroupSelect = (group) => {\n    setSelectedGroup(group);\n    setIsSplit(true);\n    \n    // 임시 대상자 데이터 로드\n    const mockTargets = [\n      {\n        id: 1,\n        name: '김철수',\n        targetType: '수급자',\n        targetHousehold: '독거어르신',\n        address: '06292 서울특별시 강남구 테헤란로 123',\n        detailAddress: '101동 1001호',\n        mobilePhone: '010-1234-5678',\n        homePhone: '02-1234-5678',\n        applicationReason: '독거어르신으로 혼자 거주하며, 경제적 어려움으로 인해 지원이 필요합니다.',\n        directions: '지하철 2호선 강남역 3번 출구에서 도보 5분',\n        status: 'active',\n        registeredAt: '2024-01-15'\n      },\n      {\n        id: 2,\n        name: '이영희',\n        targetType: '차상위',\n        targetHousehold: '조손가구',\n        address: '06293 서울특별시 강남구 역삼동 456',\n        detailAddress: '202동 2002호',\n        mobilePhone: '010-2345-6789',\n        homePhone: '02-2345-6789',\n        applicationReason: '조손가구로 손자와 함께 거주하며, 할머니의 건강상 문제로 지원이 필요합니다.',\n        directions: '지하철 9호선 신논현역 1번 출구에서 도보 3분',\n        status: 'active',\n        registeredAt: '2024-01-16'\n      },\n      {\n        id: 3,\n        name: '박민수',\n        targetType: '일반저소득',\n        targetHousehold: '저소득1인가구',\n        address: '06294 서울특별시 강남구 논현동 789',\n        detailAddress: '303동 3003호',\n        mobilePhone: '010-3456-7890',\n        homePhone: '02-3456-7890',\n        applicationReason: '저소득 1인 가구로 경제적 어려움을 겪고 있어 지원이 필요합니다.',\n        directions: '지하철 7호선 논현역 2번 출구에서 도보 7분',\n        status: 'active',\n        registeredAt: '2024-01-17'\n      }\n    ];\n    setTargets(mockTargets);\n  };\n\n  const handleCloseSplit = () => {\n    setIsSplit(false);\n    setSelectedGroup(null);\n    setTargets([]);\n  };\n\n  const handleTargetUpdate = (updatedTargets) => {\n    setTargets(updatedTargets);\n  };\n\n  const handleAddGroup = () => {\n    setEditingGroup(null);\n    setIsGroupModalOpen(true);\n  };\n\n  const handleEditGroup = (group) => {\n    setEditingGroup(group);\n    setIsGroupModalOpen(true);\n  };\n\n  const handleDeleteGroup = (group) => {\n    setGroupToDelete(group);\n    setIsDeleteModalOpen(true);\n  };\n\n  const handleSaveGroup = (groupData) => {\n    let updatedGroups;\n    \n    if (editingGroup) {\n      // 수정\n      updatedGroups = groups.map(group =>\n        group.id === editingGroup.id ? { ...group, ...groupData } : group\n      );\n    } else {\n      // 추가\n      const newGroup = {\n        id: Date.now(),\n        ...groupData,\n        targetCount: 0,\n        createdAt: new Date().toISOString().split('T')[0]\n      };\n      updatedGroups = [...groups, newGroup];\n    }\n    \n    setGroups(updatedGroups);\n    localStorage.setItem('nanumGroups', JSON.stringify(updatedGroups));\n    setIsGroupModalOpen(false);\n    setEditingGroup(null);\n  };\n\n  const handleConfirmDeleteGroup = () => {\n    const updatedGroups = groups.filter(group => group.id !== groupToDelete.id);\n    setGroups(updatedGroups);\n    localStorage.setItem('nanumGroups', JSON.stringify(updatedGroups));\n    setIsDeleteModalOpen(false);\n    setGroupToDelete(null);\n    \n    // 선택된 그룹이 삭제된 경우 선택 해제\n    if (selectedGroup && selectedGroup.id === groupToDelete.id) {\n      setSelectedGroup(null);\n      setIsSplit(false);\n      setTargets([]);\n    }\n  };\n\n  return (\n    <DashboardContainer>\n      <Header>\n        <Logo>나눔번들</Logo>\n        <UserInfo>\n          <BusinessName>{user.businessName}</BusinessName>\n          <LogoutButton onClick={onLogout}>\n            로그아웃\n          </LogoutButton>\n        </UserInfo>\n      </Header>\n\n      <MainContent>\n        <LeftPanel isSplit={isSplit}>\n          <AddGroupButton onClick={handleAddGroup}>\n            + 그룹 추가\n          </AddGroupButton>\n          <GroupGrid \n            groups={groups}\n            onGroupSelect={handleGroupSelect}\n            selectedGroup={selectedGroup}\n            onEditGroup={handleEditGroup}\n            onDeleteGroup={handleDeleteGroup}\n          />\n        </LeftPanel>\n\n        <RightPanel isSplit={isSplit}>\n          {isSplit && selectedGroup && (\n            <TargetList\n              group={selectedGroup}\n              targets={targets}\n              onClose={handleCloseSplit}\n              onTargetUpdate={handleTargetUpdate}\n            />\n          )}\n        </RightPanel>\n      </MainContent>\n\n      {isGroupModalOpen && (\n        <GroupModal\n          group={editingGroup}\n          onSave={handleSaveGroup}\n          onClose={() => {\n            setIsGroupModalOpen(false);\n            setEditingGroup(null);\n          }}\n        />\n      )}\n\n      {isDeleteModalOpen && (\n        <ConfirmModal\n          title=\"그룹 삭제\"\n          message={`${groupToDelete?.name} 그룹을 삭제하시겠습니까?`}\n          onConfirm={handleConfirmDeleteGroup}\n          onCancel={() => {\n            setIsDeleteModalOpen(false);\n            setGroupToDelete(null);\n          }}\n        />\n      )}\n    </DashboardContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}