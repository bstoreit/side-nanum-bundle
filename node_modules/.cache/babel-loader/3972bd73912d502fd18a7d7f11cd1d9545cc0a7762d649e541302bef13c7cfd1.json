{"ast":null,"code":"var _jsxFileName = \"C:\\\\bsproject_side\\\\nanum_bundle\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GroupGrid from './GroupGrid';\nimport TargetList from './TargetList';\nimport GroupModal from './GroupModal';\nimport ConfirmModal from './ConfirmModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  min-height: 100vh;\n  background-color: #f8fafc;\n`;\n_c = DashboardContainer;\nconst Header = styled.header`\n  background: white;\n  border-bottom: 1px solid #e5e7eb;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\n`;\n_c2 = Header;\nconst Logo = styled.div`\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #1e293b;\n`;\n_c3 = Logo;\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n_c4 = UserInfo;\nconst BusinessName = styled.span`\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #374151;\n`;\n_c5 = BusinessName;\nconst LogoutButton = styled.button`\n  padding: 0.5rem 1rem;\n  background-color: #ef4444;\n  color: white;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: background-color 0.2s ease;\n\n  &:hover {\n    background-color: #dc2626;\n  }\n`;\n_c6 = LogoutButton;\nconst MainContent = styled.div`\n  display: flex;\n  min-height: calc(100vh - 80px);\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c7 = MainContent;\nconst LeftPanel = styled.div`\n  flex: ${props => props.isSplit ? '1' : '1'};\n  padding: 2rem;\n  transition: flex 0.3s ease;\n\n  @media (max-width: 768px) {\n    padding: 1rem;\n    flex: none;\n  }\n`;\n_c8 = LeftPanel;\nconst AddGroupButton = styled.button`\n  margin-bottom: 1.5rem;\n  padding: 0.75rem 1.5rem;\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\n  color: white;\n  border-radius: 8px;\n  font-size: 0.9rem;\n  font-weight: 500;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: translateY(-1px);\n  }\n`;\n_c9 = AddGroupButton;\nconst RightPanel = styled.div`\n  flex: ${props => props.isSplit ? '1' : '0'};\n  background: white;\n  border-left: 1px solid #e5e7eb;\n  transition: flex 0.3s ease;\n  overflow: hidden;\n  min-width: ${props => props.isSplit ? '400px' : '0'};\n\n  @media (max-width: 768px) {\n    border-left: none;\n    border-top: 1px solid #e5e7eb;\n    min-width: auto;\n    flex: none;\n    max-height: 50vh;\n  }\n`;\n_c0 = RightPanel;\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [isSplit, setIsSplit] = useState(false);\n  const [targets, setTargets] = useState([]);\n  const [isGroupModalOpen, setIsGroupModalOpen] = useState(false);\n  const [editingGroup, setEditingGroup] = useState(null);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [groupToDelete, setGroupToDelete] = useState(null);\n  useEffect(() => {\n    // 로컬 스토리지에서 그룹 데이터 로드\n    const savedGroups = localStorage.getItem('nanumGroups');\n    if (savedGroups) {\n      setGroups(JSON.parse(savedGroups));\n    } else {\n      // 초기 데이터 설정\n      const initialGroups = [{\n        id: 1,\n        name: '강남구 그룹',\n        description: '강남구 지역 대상자 그룹',\n        organizationName: '강남구 복지센터',\n        managerName: '김철수',\n        address: '06292 서울특별시 강남구 테헤란로 123',\n        detailAddress: '101동 1001호',\n        mobilePhone: '010-1234-5678',\n        phone: '02-1234-5678',\n        targetCount: 150,\n        createdAt: '2024-01-15'\n      }, {\n        id: 2,\n        name: '해운대구 그룹',\n        description: '해운대구 지역 대상자 그룹',\n        organizationName: '해운대구 사회복지관',\n        managerName: '이영희',\n        address: '48099 부산광역시 해운대구 해운대로 456',\n        detailAddress: '202동 2002호',\n        mobilePhone: '010-2345-6789',\n        phone: '051-2345-6789',\n        targetCount: 89,\n        createdAt: '2024-01-20'\n      }, {\n        id: 3,\n        name: '수성구 그룹',\n        description: '수성구 지역 대상자 그룹',\n        organizationName: '수성구 복지재단',\n        managerName: '박민수',\n        address: '42170 대구광역시 수성구 동대구로 789',\n        detailAddress: '303동 3003호',\n        mobilePhone: '010-3456-7890',\n        phone: '053-3456-7890',\n        targetCount: 67,\n        createdAt: '2024-02-01'\n      }, {\n        id: 4,\n        name: '연수구 그룹',\n        description: '연수구 지역 대상자 그룹',\n        organizationName: '연수구 종합복지관',\n        managerName: '최지영',\n        address: '21999 인천광역시 연수구 컨벤시아대로 101',\n        detailAddress: '404동 4004호',\n        mobilePhone: '010-4567-8901',\n        phone: '032-4567-8901',\n        targetCount: 45,\n        createdAt: '2024-02-10'\n      }];\n      setGroups(initialGroups);\n      localStorage.setItem('nanumGroups', JSON.stringify(initialGroups));\n    }\n  }, []);\n  const handleGroupSelect = group => {\n    setSelectedGroup(group);\n    setIsSplit(true);\n\n    // 임시 대상자 데이터 로드\n    const mockTargets = [{\n      id: 1,\n      name: '김철수',\n      targetType: '수급자',\n      targetHousehold: '독거어르신',\n      address: '06292 서울특별시 강남구 테헤란로 123',\n      detailAddress: '101동 1001호',\n      mobilePhone: '010-1234-5678',\n      homePhone: '02-1234-5678',\n      applicationReason: '독거어르신으로 혼자 거주하며, 경제적 어려움으로 인해 지원이 필요합니다.',\n      directions: '지하철 2호선 강남역 3번 출구에서 도보 5분',\n      status: 'active',\n      registeredAt: '2024-01-15'\n    }, {\n      id: 2,\n      name: '이영희',\n      targetType: '차상위',\n      targetHousehold: '조손가구',\n      address: '06293 서울특별시 강남구 역삼동 456',\n      detailAddress: '202동 2002호',\n      mobilePhone: '010-2345-6789',\n      homePhone: '02-2345-6789',\n      applicationReason: '조손가구로 손자와 함께 거주하며, 할머니의 건강상 문제로 지원이 필요합니다.',\n      directions: '지하철 9호선 신논현역 1번 출구에서 도보 3분',\n      status: 'active',\n      registeredAt: '2024-01-16'\n    }, {\n      id: 3,\n      name: '박민수',\n      targetType: '일반저소득',\n      targetHousehold: '저소득1인가구',\n      address: '06294 서울특별시 강남구 논현동 789',\n      detailAddress: '303동 3003호',\n      mobilePhone: '010-3456-7890',\n      homePhone: '02-3456-7890',\n      applicationReason: '저소득 1인 가구로 경제적 어려움을 겪고 있어 지원이 필요합니다.',\n      directions: '지하철 7호선 논현역 2번 출구에서 도보 7분',\n      status: 'active',\n      registeredAt: '2024-01-17'\n    }];\n    setTargets(mockTargets);\n  };\n  const handleCloseSplit = () => {\n    setIsSplit(false);\n    setSelectedGroup(null);\n    setTargets([]);\n  };\n  const handleTargetUpdate = updatedTargets => {\n    setTargets(updatedTargets);\n  };\n  const handleAddGroup = () => {\n    setEditingGroup(null);\n    setIsGroupModalOpen(true);\n  };\n  const handleEditGroup = group => {\n    setEditingGroup(group);\n    setIsGroupModalOpen(true);\n  };\n  const handleDeleteGroup = group => {\n    setGroupToDelete(group);\n    setIsDeleteModalOpen(true);\n  };\n  const handleSaveGroup = groupData => {\n    let updatedGroups;\n    if (editingGroup) {\n      // 수정\n      updatedGroups = groups.map(group => group.id === editingGroup.id ? {\n        ...group,\n        ...groupData\n      } : group);\n    } else {\n      // 추가\n      const newGroup = {\n        id: Date.now(),\n        ...groupData,\n        targetCount: 0,\n        createdAt: new Date().toISOString().split('T')[0]\n      };\n      updatedGroups = [...groups, newGroup];\n    }\n    setGroups(updatedGroups);\n    setIsGroupModalOpen(false);\n    setEditingGroup(null);\n  };\n  const handleConfirmDeleteGroup = () => {\n    const updatedGroups = groups.filter(group => group.id !== groupToDelete.id);\n    setGroups(updatedGroups);\n    setIsDeleteModalOpen(false);\n    setGroupToDelete(null);\n\n    // 선택된 그룹이 삭제된 경우 선택 해제\n    if (selectedGroup && selectedGroup.id === groupToDelete.id) {\n      setSelectedGroup(null);\n      setIsSplit(false);\n      setTargets([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        children: \"\\uB098\\uB214\\uBC88\\uB4E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        children: [/*#__PURE__*/_jsxDEV(BusinessName, {\n          children: user.businessName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {\n          onClick: onLogout,\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(LeftPanel, {\n        isSplit: isSplit,\n        children: [/*#__PURE__*/_jsxDEV(AddGroupButton, {\n          onClick: handleAddGroup,\n          children: \"+ \\uADF8\\uB8F9 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GroupGrid, {\n          groups: groups,\n          onGroupSelect: handleGroupSelect,\n          selectedGroup: selectedGroup,\n          onEditGroup: handleEditGroup,\n          onDeleteGroup: handleDeleteGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPanel, {\n        isSplit: isSplit,\n        children: isSplit && selectedGroup && /*#__PURE__*/_jsxDEV(TargetList, {\n          group: selectedGroup,\n          targets: targets,\n          onClose: handleCloseSplit,\n          onTargetUpdate: handleTargetUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), isGroupModalOpen && /*#__PURE__*/_jsxDEV(GroupModal, {\n      group: editingGroup,\n      onSave: handleSaveGroup,\n      onClose: () => {\n        setIsGroupModalOpen(false);\n        setEditingGroup(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), isDeleteModalOpen && /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      title: \"\\uADF8\\uB8F9 \\uC0AD\\uC81C\",\n      message: `${groupToDelete === null || groupToDelete === void 0 ? void 0 : groupToDelete.name} 그룹을 삭제하시겠습니까?`,\n      onConfirm: handleConfirmDeleteGroup,\n      onCancel: () => {\n        setIsDeleteModalOpen(false);\n        setGroupToDelete(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"K5OyS/orL/sjnSxkVmhtyvMb5XY=\");\n_c1 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"UserInfo\");\n$RefreshReg$(_c5, \"BusinessName\");\n$RefreshReg$(_c6, \"LogoutButton\");\n$RefreshReg$(_c7, \"MainContent\");\n$RefreshReg$(_c8, \"LeftPanel\");\n$RefreshReg$(_c9, \"AddGroupButton\");\n$RefreshReg$(_c0, \"RightPanel\");\n$RefreshReg$(_c1, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","GroupGrid","TargetList","GroupModal","ConfirmModal","jsxDEV","_jsxDEV","DashboardContainer","div","_c","Header","header","_c2","Logo","_c3","UserInfo","_c4","BusinessName","span","_c5","LogoutButton","button","_c6","MainContent","_c7","LeftPanel","props","isSplit","_c8","AddGroupButton","_c9","RightPanel","_c0","Dashboard","user","onLogout","_s","groups","setGroups","selectedGroup","setSelectedGroup","setIsSplit","targets","setTargets","isGroupModalOpen","setIsGroupModalOpen","editingGroup","setEditingGroup","isDeleteModalOpen","setIsDeleteModalOpen","groupToDelete","setGroupToDelete","savedGroups","localStorage","getItem","JSON","parse","initialGroups","id","name","description","organizationName","managerName","address","detailAddress","mobilePhone","phone","targetCount","createdAt","setItem","stringify","handleGroupSelect","group","mockTargets","targetType","targetHousehold","homePhone","applicationReason","directions","status","registeredAt","handleCloseSplit","handleTargetUpdate","updatedTargets","handleAddGroup","handleEditGroup","handleDeleteGroup","handleSaveGroup","groupData","updatedGroups","map","newGroup","Date","now","toISOString","split","handleConfirmDeleteGroup","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","businessName","onClick","onGroupSelect","onEditGroup","onDeleteGroup","onClose","onTargetUpdate","onSave","title","message","onConfirm","onCancel","_c1","$RefreshReg$"],"sources":["C:/bsproject_side/nanum_bundle/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport GroupGrid from './GroupGrid';\r\nimport TargetList from './TargetList';\r\nimport GroupModal from './GroupModal';\r\nimport ConfirmModal from './ConfirmModal';\r\n\r\nconst DashboardContainer = styled.div`\r\n  min-height: 100vh;\r\n  background-color: #f8fafc;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  background: white;\r\n  border-bottom: 1px solid #e5e7eb;\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Logo = styled.div`\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  color: #1e293b;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst BusinessName = styled.span`\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  color: #374151;\r\n`;\r\n\r\nconst LogoutButton = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  background-color: #ef4444;\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #dc2626;\r\n  }\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  display: flex;\r\n  min-height: calc(100vh - 80px);\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst LeftPanel = styled.div`\r\n  flex: ${props => props.isSplit ? '1' : '1'};\r\n  padding: 2rem;\r\n  transition: flex 0.3s ease;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 1rem;\r\n    flex: none;\r\n  }\r\n`;\r\n\r\nconst AddGroupButton = styled.button`\r\n  margin-bottom: 1.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  background: linear-gradient(135deg, #10b981 0%, #059669 100%);\r\n  color: white;\r\n  border-radius: 8px;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  transition: transform 0.2s ease;\r\n\r\n  &:hover {\r\n    transform: translateY(-1px);\r\n  }\r\n`;\r\n\r\nconst RightPanel = styled.div`\r\n  flex: ${props => props.isSplit ? '1' : '0'};\r\n  background: white;\r\n  border-left: 1px solid #e5e7eb;\r\n  transition: flex 0.3s ease;\r\n  overflow: hidden;\r\n  min-width: ${props => props.isSplit ? '400px' : '0'};\r\n\r\n  @media (max-width: 768px) {\r\n    border-left: none;\r\n    border-top: 1px solid #e5e7eb;\r\n    min-width: auto;\r\n    flex: none;\r\n    max-height: 50vh;\r\n  }\r\n`;\r\n\r\nconst Dashboard = ({ user, onLogout }) => {\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [isSplit, setIsSplit] = useState(false);\r\n  const [targets, setTargets] = useState([]);\r\n  const [isGroupModalOpen, setIsGroupModalOpen] = useState(false);\r\n  const [editingGroup, setEditingGroup] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [groupToDelete, setGroupToDelete] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 로컬 스토리지에서 그룹 데이터 로드\r\n    const savedGroups = localStorage.getItem('nanumGroups');\r\n    if (savedGroups) {\r\n      setGroups(JSON.parse(savedGroups));\r\n    } else {\r\n      // 초기 데이터 설정\r\n      const initialGroups = [\r\n        {\r\n          id: 1,\r\n          name: '강남구 그룹',\r\n          description: '강남구 지역 대상자 그룹',\r\n          organizationName: '강남구 복지센터',\r\n          managerName: '김철수',\r\n          address: '06292 서울특별시 강남구 테헤란로 123',\r\n          detailAddress: '101동 1001호',\r\n          mobilePhone: '010-1234-5678',\r\n          phone: '02-1234-5678',\r\n          targetCount: 150,\r\n          createdAt: '2024-01-15'\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '해운대구 그룹',\r\n          description: '해운대구 지역 대상자 그룹',\r\n          organizationName: '해운대구 사회복지관',\r\n          managerName: '이영희',\r\n          address: '48099 부산광역시 해운대구 해운대로 456',\r\n          detailAddress: '202동 2002호',\r\n          mobilePhone: '010-2345-6789',\r\n          phone: '051-2345-6789',\r\n          targetCount: 89,\r\n          createdAt: '2024-01-20'\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '수성구 그룹',\r\n          description: '수성구 지역 대상자 그룹',\r\n          organizationName: '수성구 복지재단',\r\n          managerName: '박민수',\r\n          address: '42170 대구광역시 수성구 동대구로 789',\r\n          detailAddress: '303동 3003호',\r\n          mobilePhone: '010-3456-7890',\r\n          phone: '053-3456-7890',\r\n          targetCount: 67,\r\n          createdAt: '2024-02-01'\r\n        },\r\n        {\r\n          id: 4,\r\n          name: '연수구 그룹',\r\n          description: '연수구 지역 대상자 그룹',\r\n          organizationName: '연수구 종합복지관',\r\n          managerName: '최지영',\r\n          address: '21999 인천광역시 연수구 컨벤시아대로 101',\r\n          detailAddress: '404동 4004호',\r\n          mobilePhone: '010-4567-8901',\r\n          phone: '032-4567-8901',\r\n          targetCount: 45,\r\n          createdAt: '2024-02-10'\r\n        }\r\n      ];\r\n      setGroups(initialGroups);\r\n      localStorage.setItem('nanumGroups', JSON.stringify(initialGroups));\r\n    }\r\n  }, []);\r\n\r\n  const handleGroupSelect = (group) => {\r\n    setSelectedGroup(group);\r\n    setIsSplit(true);\r\n    \r\n    // 임시 대상자 데이터 로드\r\n    const mockTargets = [\r\n      {\r\n        id: 1,\r\n        name: '김철수',\r\n        targetType: '수급자',\r\n        targetHousehold: '독거어르신',\r\n        address: '06292 서울특별시 강남구 테헤란로 123',\r\n        detailAddress: '101동 1001호',\r\n        mobilePhone: '010-1234-5678',\r\n        homePhone: '02-1234-5678',\r\n        applicationReason: '독거어르신으로 혼자 거주하며, 경제적 어려움으로 인해 지원이 필요합니다.',\r\n        directions: '지하철 2호선 강남역 3번 출구에서 도보 5분',\r\n        status: 'active',\r\n        registeredAt: '2024-01-15'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '이영희',\r\n        targetType: '차상위',\r\n        targetHousehold: '조손가구',\r\n        address: '06293 서울특별시 강남구 역삼동 456',\r\n        detailAddress: '202동 2002호',\r\n        mobilePhone: '010-2345-6789',\r\n        homePhone: '02-2345-6789',\r\n        applicationReason: '조손가구로 손자와 함께 거주하며, 할머니의 건강상 문제로 지원이 필요합니다.',\r\n        directions: '지하철 9호선 신논현역 1번 출구에서 도보 3분',\r\n        status: 'active',\r\n        registeredAt: '2024-01-16'\r\n      },\r\n      {\r\n        id: 3,\r\n        name: '박민수',\r\n        targetType: '일반저소득',\r\n        targetHousehold: '저소득1인가구',\r\n        address: '06294 서울특별시 강남구 논현동 789',\r\n        detailAddress: '303동 3003호',\r\n        mobilePhone: '010-3456-7890',\r\n        homePhone: '02-3456-7890',\r\n        applicationReason: '저소득 1인 가구로 경제적 어려움을 겪고 있어 지원이 필요합니다.',\r\n        directions: '지하철 7호선 논현역 2번 출구에서 도보 7분',\r\n        status: 'active',\r\n        registeredAt: '2024-01-17'\r\n      }\r\n    ];\r\n    setTargets(mockTargets);\r\n  };\r\n\r\n  const handleCloseSplit = () => {\r\n    setIsSplit(false);\r\n    setSelectedGroup(null);\r\n    setTargets([]);\r\n  };\r\n\r\n  const handleTargetUpdate = (updatedTargets) => {\r\n    setTargets(updatedTargets);\r\n  };\r\n\r\n  const handleAddGroup = () => {\r\n    setEditingGroup(null);\r\n    setIsGroupModalOpen(true);\r\n  };\r\n\r\n  const handleEditGroup = (group) => {\r\n    setEditingGroup(group);\r\n    setIsGroupModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteGroup = (group) => {\r\n    setGroupToDelete(group);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const handleSaveGroup = (groupData) => {\r\n    let updatedGroups;\r\n    \r\n    if (editingGroup) {\r\n      // 수정\r\n      updatedGroups = groups.map(group =>\r\n        group.id === editingGroup.id ? { ...group, ...groupData } : group\r\n      );\r\n    } else {\r\n      // 추가\r\n      const newGroup = {\r\n        id: Date.now(),\r\n        ...groupData,\r\n        targetCount: 0,\r\n        createdAt: new Date().toISOString().split('T')[0]\r\n      };\r\n      updatedGroups = [...groups, newGroup];\r\n    }\r\n    \r\n    setGroups(updatedGroups);\r\n    setIsGroupModalOpen(false);\r\n    setEditingGroup(null);\r\n  };\r\n\r\n  const handleConfirmDeleteGroup = () => {\r\n    const updatedGroups = groups.filter(group => group.id !== groupToDelete.id);\r\n    setGroups(updatedGroups);\r\n    setIsDeleteModalOpen(false);\r\n    setGroupToDelete(null);\r\n    \r\n    // 선택된 그룹이 삭제된 경우 선택 해제\r\n    if (selectedGroup && selectedGroup.id === groupToDelete.id) {\r\n      setSelectedGroup(null);\r\n      setIsSplit(false);\r\n      setTargets([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardContainer>\r\n      <Header>\r\n        <Logo>나눔번들</Logo>\r\n        <UserInfo>\r\n          <BusinessName>{user.businessName}</BusinessName>\r\n          <LogoutButton onClick={onLogout}>\r\n            로그아웃\r\n          </LogoutButton>\r\n        </UserInfo>\r\n      </Header>\r\n\r\n      <MainContent>\r\n        <LeftPanel isSplit={isSplit}>\r\n          <AddGroupButton onClick={handleAddGroup}>\r\n            + 그룹 추가\r\n          </AddGroupButton>\r\n          <GroupGrid \r\n            groups={groups}\r\n            onGroupSelect={handleGroupSelect}\r\n            selectedGroup={selectedGroup}\r\n            onEditGroup={handleEditGroup}\r\n            onDeleteGroup={handleDeleteGroup}\r\n          />\r\n        </LeftPanel>\r\n\r\n        <RightPanel isSplit={isSplit}>\r\n          {isSplit && selectedGroup && (\r\n            <TargetList\r\n              group={selectedGroup}\r\n              targets={targets}\r\n              onClose={handleCloseSplit}\r\n              onTargetUpdate={handleTargetUpdate}\r\n            />\r\n          )}\r\n        </RightPanel>\r\n      </MainContent>\r\n\r\n      {isGroupModalOpen && (\r\n        <GroupModal\r\n          group={editingGroup}\r\n          onSave={handleSaveGroup}\r\n          onClose={() => {\r\n            setIsGroupModalOpen(false);\r\n            setEditingGroup(null);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {isDeleteModalOpen && (\r\n        <ConfirmModal\r\n          title=\"그룹 삭제\"\r\n          message={`${groupToDelete?.name} 그룹을 삭제하시겠습니까?`}\r\n          onConfirm={handleConfirmDeleteGroup}\r\n          onCancel={() => {\r\n            setIsDeleteModalOpen(false);\r\n            setGroupToDelete(null);\r\n          }}\r\n        />\r\n      )}\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}